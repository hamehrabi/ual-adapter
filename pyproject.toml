[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ual-adapter"
version = "0.1.0"
description = "Universal Adapter LoRA for architecture-agnostic model adaptation"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = [
    "deep-learning",
    "pytorch", 
    "transformers",
    "lora",
    "adapter",
    "fine-tuning",
    "transfer-learning",
    "nlp",
    "multi-agent",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "peft>=0.4.0",
    "numpy>=1.21.0",
    "safetensors>=0.3.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.0.0",
    "datasets>=2.10.0",
    "pandas>=1.3.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "jsonschema>=4.0.0",
    "loguru>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "black>=22.0",
    "isort>=5.10",
    "flake8>=4.0",
    "mypy>=0.990",
    "pre-commit>=2.20",
]
docs = [
    "sphinx>=4.5",
    "sphinx-rtd-theme>=1.0",
    "sphinxcontrib-napoleon>=0.7",
    "myst-parser>=0.18",
]
all = [
    "ual-adapter[dev]",
    "ual-adapter[docs]",
    "accelerate>=0.20.0",
    "bitsandbytes>=0.40.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ual-adapter"
Documentation = "https://ual-adapter.readthedocs.io"
Repository = "https://github.com/yourusername/ual-adapter.git"
Issues = "https://github.com/yourusername/ual-adapter/issues"
Changelog = "https://github.com/yourusername/ual-adapter/blob/main/CHANGELOG.md"

[project.scripts]
ual-adapter = "ual_adapter.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["ual_adapter*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
ual_adapter = ["configs/*.yaml", "binders/*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=ual_adapter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
